name: Java CI

on: 
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Java ${{ matrix.java }}
    strategy:
      matrix:
        java: [21]

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4.7.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Cache local Maven repository
        uses: actions/cache@v4.2.0
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Graphviz
        uses: ts-graphviz/setup-graphviz@v2.0.2

      - name: Validate
        run: ./mvnw -B clean validate

      - name: Checkstyle run
        run: ./mvnw -B -Pcheckstyle validate

      - name: Checkstyle upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: checkstyle
          path: |
            target/checkstyle-cachefile
            target/checkstyle-checker.xml
            target/checkstyle-result.xml

      - name: Pmd run
        run: ./mvnw -B -Ppmd validate

      - name: Pmd upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pmd
          path: |
            target/pmd.xml
            target/pmd
            target/reports

      - name: Cpd run
        run: ./mvnw -B -Pcpd validate

      - name: Cpd upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cpd
          path: |
            target/cpd.xml
            target/reports

      - name: Plantuml run
        run: ./mvnw -B -Pplantuml generate-test-sources

      - name: Plantuml upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: plantuml
          path: |
            target/generated-docs
            target/generated-diagrams

      - name: Decycle run
        run: ./mvnw -B -Pdecycle -DskipTests verify

      - name: Decycle upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: decycle
          path: |
            target/site/decycle

      - name: Duplicate run
        run: ./mvnw -B -Pduplicate -DskipTests verify

      - name: Duplicate upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: duplicate
          path: |
            target/duplicate-finder-result.xml

      - name: Spotbugs run
        run: ./mvnw -B -Pspotbugs -DskipTests process-test-classes

      - name: Spotbugs upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: spotbugs
          path: |
            target/spotbugs.xml
            target/spotbugsXml.xml
            target/spotbugs-exclude.xml

      - name: Tests run
        run: ./mvnw -B verify

      - name: Tests upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tests
          path: |
            target/jacoco.exec
            target/site/jacoco
            target/failsafe-reports
            target/surefire-reports

      - name: Build with Aot
        run: ./mvnw -B -DskipTests -Paot clean package

      - name: Build with aot upload artifacts
        uses: actions/upload-artifact@v4.6.0
        with:
          name: aot
          path: |
            target/example-*-SNAPSHOT.jar

      - name: Docker Hub login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'persapiens-classes/ifrn-software-quality-example' }}

      - name: Docker set up QEMU
        uses: docker/setup-qemu-action@v3.4.0
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'persapiens-classes/ifrn-software-quality-example' }}

      - name: Docker set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'persapiens-classes/ifrn-software-quality-example' }}

      - name: Docker build and push
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: persapiens/software-quality-example:latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'persapiens-classes/ifrn-software-quality-example' }}

      - name: Docker build and push with caddy
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          file: Dockerfile.caddy-proxy
          tags: persapiens/software-quality-caddy-example:latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'persapiens-classes/ifrn-software-quality-example' }}

